version: '3.9'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    volumes:
      - /path/on/host/zookeeper-data:/var/lib/zookeeper/data
    restart: always
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
    restart: always
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - /path/on/host/kafka-data:/var/lib/kafka/data


  user_service:
    container_name: user_service
    build: ./user-service
    ports:
      - 3000:3000
    volumes:
      - ./user-service:/app
    depends_on:
      - kafka
    restart: always

  admin_service:
    container_name: admin_service
    build: ./admin-service
    ports:
      - 4000:4000
    volumes:
      - ./admin-service:/app
    depends_on:
      - kafka
    restart: always

  post_service:
    container_name: post_service
    build: ./post-service
    ports:
      - 3001:3001
    volumes:
      - ./post-service:/app
    depends_on:
      - kafka
    restart: always
  
  nginx:
    container_name: nginx_proxy
    build:
      context: ./proxy
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - user_service
      - admin_service
      - post_service
    volumes:
    - ./proxy/nginx.conf:/etc/nginx/nginx.conf 
    restart: always



